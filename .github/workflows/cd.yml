name: CD
on:
  push:
    branches: ["master"]
jobs:
  CD:
    runs-on: ubuntu-latest
    steps:
      # 切换到目标分支
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"
          cache: "npm"
      # 缓存
      - name: Cache
        uses: actions/cache@v3
        id: npm_cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # 安装依赖
      - name: Installing Dependencies
        if: ${{ steps.npm_cache.outputs.cache-hit == 'false' }}
        run: npm install
        continue-on-error: false
      # 打包
      - name: Building
        run: |
          npm run build
          zip -q -r dist.zip ./dist/*
        continue-on-error: false
      # 读取版本号,用于后面新建Release
      - name: Read Version
        id: version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: ./package.json
          property: version
      # 获取最新Release
      - name: Get The Latest Release
        id: latest_release
        uses: joutvhu/get-release@v1
        with:
          latest: true
          pattern: '^v.*'
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Create GitHub Release
        # 如果Release存在,则不创建跳过
        if: ${{ endsWith(steps.latest_release.outputs.tag_name, steps.version.outputs.value) == false }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.value }}
          release_name: v${{ steps.version.outputs.value }}
          draft: false
          prerelease: false
      # 更新Release包
      - name: Update Release
        # 上一步失败或取消,则跳过这一步
        if: ${{ !success() }}
        id: update_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip
      # 打包后文件上传到服务器
      - name: Deploy Server
        uses: easingthemes/ssh-deploy@v2.0.7
        env:
          SSH_PRIVATE_KEY: ${{ secrets.REMOTE_TOKEN }}
          SOURCE: "dist/"
          TARGET: ${{ secrets.REMOTE_TARGET }}
          ARGS: "-avzr --delete"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
